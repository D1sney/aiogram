from aiogram import Bot, Dispatcher, executor, types
import random, asyncio, time
from aiogram.dispatcher.filters import Text
from test_bot2keyboards import kb,kb2,ikb
from my_botconfig import TOKEN_API

bot = Bot(TOKEN_API)
dp = Dispatcher(bot)

async def start(_):
    print('test_bot2 was start')


@dp.message_handler(commands=['random_place'])
async def place_command(message: types.Message):
    await bot.send_location(chat_id=message.chat.id,
                            latitude=random.randint(-90,90), longitude=random.randint(-180,180))

@dp.message_handler(commands=['start2'])
async def start_command2(message: types.Message):
    await asyncio.sleep(1)
    await message.answer( 'Hello2', reply_markup=kb2)

@dp.message_handler(commands=['orange'])
async def orange_command(message: types.Message):
    await bot.send_photo(chat_id=message.chat.id, 
                         photo='https://www.google.com/imgres?imgurl=https%3A%2F%2Fupload.wikimedia.org%2Fwikipedia%2Fcommons%2F4%2F43%2FAmbersweet_oranges.jpg&imgrefurl=https%3A%2F%2Fen.wikipedia.org%2Fwiki%2FOrange_(word)&tbnid=bd487gs314KMhM&vet=12ahUKEwieqtD_it_9AhUQsSoKHY1QBfQQMygKegUIARDWAQ..i&docid=lOUrMhsJMwmW1M&w=1999&h=2254&q=orange&ved=2ahUKEwieqtD_it_9AhUQsSoKHY1QBfQQMygKegUIARDWAQ', 
                         caption='Choose faster',
                         reply_markup=ikb)

@dp.message_handler(commands=['start'])
async def start_command(message: types.Message):
    time.sleep(5)                                                               # –∫–æ–≥–¥–∞ —Ç—ã –ø–∏—à–µ—à—å time.sleep, –∞ –Ω–µ asyncio.sleep, –≤–µ—Å—å —Å–∫—Ä–∏–ø—Ç –∂–¥–µ—Ç –∏—Å–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã –∏ –¥—Ä—É–≥–∏–µ –∫–æ–º–∞–Ω–¥—ã –∏—Å–ø–æ–ª–Ω—è—é—Ç—Å—è –Ω–µ –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–Ω–æ
    await asyncio.sleep(3)                                                      # –Ω–æ –ø–æ—Å–ª–µ –æ–±—ã—á–Ω–æ–≥–æ time.sleep, asyncio.sleep –∫–æ–Ω–∫—É—Ä–∏—Ä—É–µ—Ç —Å –¥—Ä—É–≥–∏–º–∏ asyncio.sleep, –∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ —Å asyncio.sleep –≤ —Ñ—É–Ω–∫—Ü–∏–∏ start2   –∏ –µ—Å–ª–∏ –∑–∞–ø—É—Å—Ç–∏—Ç—å —ç—Ç–∏ –¥–≤–µ —Ñ—É–Ω–∫—Ü–∏–∏ –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ(—Å–Ω–∞—á–∞–ª–∞ start1), —Ç–æ –≤ —ç—Ç–æ–º —ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç–µ start2 –æ—Ç–ø—Ä–∞–≤–∏—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ —Ä–∞–Ω—å—à–µ
    await bot.send_message(message.from_user.id, 'Hello', reply_markup=kb)      # –∞ –µ—Å–ª–∏ –ø—Ä–µ—Ä–≤–∞—Ç—å –∏—Å–ø–æ–ª–Ω–µ–Ω–∏–µ start2 –∏ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å start1, —Ç–æ –∏—Å–ø–æ–ª–Ω–µ–Ω–∏–µ –∫–æ–¥–∞ –ø–µ—Ä–µ–π–¥–µ—Ç –Ω–∞ start1 –∏ –≤–µ—Å—å —Å–∫—Ä–∏–ø—Ç –±—É–¥–µ—Ç –∂–¥–∞—Ç—å –ø–æ–∫–∞ –Ω–µ –∏—Å–ø–æ–ª–Ω–∏—Ç—Å—è time.sleep(5), –∞ —É–∂–µ –ø–æ—Ç–æ–º –±—É–¥–µ—Ç –∫–æ–Ω–∫—É—Ä–µ–Ω—Ü–∏—è –º–µ–∂–¥—É –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏–µ–º start1 –∏ start2

@dp.message_handler(Text(equals='Elephant'))
async def elephant_command(message: types.Message):
    await bot.send_message(message.from_user.id, 'Elephantiküêò') 


@dp.message_handler()
async def sticker_command(message: types.Message):
    if message.text == 'üê≥':
        await bot.send_sticker(message.from_user.id, sticker='CAACAgIAAxkBAAICVmQSTU05eKzPgE8LI3V8BnAlbOfBAAJiAANOXNIpTqLDGEjEK3EvBA')
    elif '‚úåüèº' in message.text:
        await bot.send_sticker(message.from_user.id, sticker='CAACAgIAAxkBAAICVmQSTU05eKzPgE8LI3V8BnAlbOfBAAJiAANOXNIpTqLDGEjEK3EvBA')

@dp.callback_query_handler()
async def calbak(callback: types.CallbackQuery):
    if callback.data == 'typingclub':
        await callback.answer(text='typing club good') 



if __name__ == '__main__':
    executor.start_polling(dp, on_startup=start, skip_updates=True)
